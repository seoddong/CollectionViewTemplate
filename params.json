{
  "name": "UICollectionView Template in Swift",
  "tagline": "UICollectionView, UIStackView",
  "body": "# It Has.. \r\n이 프로젝트를 하게 된 이유는 UIStackView의 UI 배치에 대한 알 수 없는 불편함을 느끼고 대안을 찾다가 UIStackView를 UICollectionView로 대체해보자는 생각에서 시작되었다.\r\n이 템플릿은 다음 기능들을 가지고 있다.\r\n\r\n## keyboard extension for textField\r\n* keyboardWillShow : 키보드가 나타날 때 해당 TextField가 가려진다면 자동 스크롤하여 보여질 수 있도록 함\r\n* keyboardWillHide : 키보드가 사라질 때 View를 원복함\r\n* registerKeyboardEvent/unregisterKeyboardEvent : 위 두 가지 기능을 위한 keyboard event 등록 및 해제\r\n\r\n\r\n## UICollectionView에서의 기능\r\n* touchesBegan : 원래 목적은 TextField를 제외한 화면 아무데나 터치하면 키보드를 dismiss하려고 넣은 메소드이나 UICollectionView에서는 아무리 해도 이 메소드가 호출되지 않는 것을 알게 됨. 대안은 아래 주석과 소스로 설명 대체\r\n\r\n    // 텍스트필드말고 다른 곳 터치하면 키보드를 가리도록 한다.\r\n    // 고대로부터 전해져 내려오는 얘기로는 UITableView, UICollectionView는 이 메소드가 먹지 않는다고 한다.\r\n    // 물론 toucheBegan을 Cell에 장착하면 이벤트가 발생한다. 하지만 Cell과 Cell사이를 탭하거나 Section Header를 탭할 때는 역시 이벤트가 발생하지 않는다.\r\n    // http://stackoverflow.com/a/5382784/6291225\r\n    // 뭐 하려면 UITableView나 UICollectionView를 subclassing해야 한다나 뭐라나..\r\n    // 하지만 이게 쉬운 것이 아니니 그냥 UIGestureRecognizer를 구현하라고 한다.\r\n    // 그래서 이 소스에서는 이 가이드를 따라 ViewDidLoad에서 UIGestureRecognizer를 구현했다.\r\n    override func touchesBegan(touches: Set<UITouch>, withEvent event: UIEvent?) {\r\n        debugPrint(\"touchesBegan\")\r\n        super.touchesBegan(touches, withEvent: event)\r\n        activeField!.endEditing(true)\r\n    }\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}